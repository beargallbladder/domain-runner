events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=processing:10m rate=1r/s;

    # Upstream servers
    upstream public_api {
        server public-api:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream sophisticated_runner {
        server sophisticated-runner:3003 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream seo_metrics {
        server seo-metrics-runner:3004 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Main server configuration
    server {
        listen 80;
        server_name llmrank.io www.llmrank.io;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy strict-origin-when-cross-origin;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Health check endpoint
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Public API routes
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://public_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Connection pooling
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Processing endpoints (rate limited)
        location /process-pending-domains {
            limit_req zone=processing burst=5 nodelay;
            
            proxy_pass http://sophisticated_runner;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Extended timeouts for processing
            proxy_connect_timeout 10s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Ultra-fast processing endpoint
        location /ultra-fast-process {
            limit_req zone=processing burst=2 nodelay;
            
            proxy_pass http://sophisticated_runner;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 10s;
            proxy_send_timeout 600s;
            proxy_read_timeout 600s;
            
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # SEO metrics endpoints
        location /seo/ {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://seo_metrics;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Health checks (no rate limiting)
        location /health {
            proxy_pass http://public_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            access_log off;
        }

        # Default route to public API
        location / {
            limit_req zone=api burst=30 nodelay;
            
            proxy_pass http://public_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }
    }

    # Monitoring server
    server {
        listen 8080;
        server_name monitoring.llmrank.io;

        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            deny all;
        }

        location /metrics {
            proxy_pass http://monitoring:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}