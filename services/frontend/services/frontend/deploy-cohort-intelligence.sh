#!/bin/bash

# ============================================================================
# COHORT INTELLIGENCE DEPLOYMENT SCRIPT
# ============================================================================
# 
# Deploys the comprehensive cohort intelligence system to production
# 
# Features deployed:
# 1. Ultra-precise competitive cohorts (10 industry groups)
# 2. Dynamic competitor discovery
# 3. Scientific competitive narratives
# 4. API endpoints for frontend consumption
# 5. Frontend cohort browser and integration
# 
# This is the money-making feature - tight competitor groupings that create
# the "$100K+ problem" moment when CMOs see their brand ranking #4 out of 5.

echo "üéØ COHORT INTELLIGENCE DEPLOYMENT"
echo "=================================="
echo ""
echo "üöÄ Deploying comprehensive competitive analysis system..."
echo ""

# Check if we're in the right directory
if [ ! -f "services/sophisticated-runner/src/cohort-intelligence-system.ts" ]; then
    echo "‚ùå Error: cohort-intelligence-system.ts not found!"
    echo "   Please run this script from the project root directory."
    exit 1
fi

echo "üìã DEPLOYMENT CHECKLIST:"
echo "========================"
echo "‚úÖ Cohort Intelligence System: services/sophisticated-runner/src/cohort-intelligence-system.ts"
echo "‚úÖ API Integration: services/sophisticated-runner/src/index.ts"
echo "‚úÖ Frontend Component: services/frontend/src/components/CompetitorStackRanking.jsx"
echo "‚úÖ Frontend Page: services/frontend/src/pages/CompetitiveCohorts.jsx"
echo "‚úÖ Router Integration: services/frontend/src/App.jsx"
echo "‚úÖ Navigation Link: services/frontend/src/components/Navigation.jsx"
echo ""

echo "üéØ COHORT DEFINITIONS:"
echo "======================"
echo "‚Ä¢ Semiconductor Companies (Texas Instruments vs NXP vs Analog Devices)"
echo "‚Ä¢ Electronic Component Distributors (Digi-Key vs Mouser vs Arrow)"
echo "‚Ä¢ Payment Processing Platforms (Stripe vs PayPal vs Square)"
echo "‚Ä¢ AI & Machine Learning Platforms (OpenAI vs Anthropic vs Hugging Face)"
echo "‚Ä¢ Cloud Infrastructure Providers (AWS vs Azure vs Google Cloud)"
echo "‚Ä¢ Developer Tools & Platforms (GitHub vs GitLab vs Docker)"
echo "‚Ä¢ E-commerce Platforms (Shopify vs WooCommerce vs Magento)"
echo "‚Ä¢ CRM & Sales Platforms (Salesforce vs HubSpot vs Pipedrive)"
echo "‚Ä¢ Cybersecurity Companies (CrowdStrike vs Palo Alto vs Fortinet)"
echo "‚Ä¢ Streaming & Media Platforms (Netflix vs Disney vs Hulu)"
echo ""

echo "üîß Building sophisticated runner..."
cd services/sophisticated-runner

# Install dependencies if needed
if [ ! -d "node_modules" ]; then
    echo "üì¶ Installing dependencies..."
    npm install
fi

# Build TypeScript
echo "üèóÔ∏è  Building TypeScript..."
npm run build

if [ $? -ne 0 ]; then
    echo "‚ùå TypeScript build failed!"
    exit 1
fi

echo "‚úÖ Sophisticated runner built successfully"
cd ../..

echo ""
echo "üåê Building frontend..."
cd services/frontend

# Install dependencies if needed
if [ ! -d "node_modules" ]; then
    echo "üì¶ Installing frontend dependencies..."
    npm install
fi

# Build frontend
echo "üèóÔ∏è  Building frontend..."
npm run build

if [ $? -ne 0 ]; then
    echo "‚ùå Frontend build failed!"
    exit 1
fi

echo "‚úÖ Frontend built successfully"
cd ../..

echo ""
echo "üöÄ DEPLOYMENT SUMMARY:"
echo "======================"
echo ""
echo "üéØ COHORT INTELLIGENCE FEATURES:"
echo "‚Ä¢ Ultra-precise competitive groupings (max 8 companies per cohort)"
echo "‚Ä¢ Scientific neutrality ('beacon of trust, not Fox News')"
echo "‚Ä¢ Dynamic competitor discovery for under-populated cohorts"
echo "‚Ä¢ Real-time competitive narratives"
echo "‚Ä¢ API-ready for frontend consumption"
echo ""
echo "üìä API ENDPOINTS DEPLOYED:"
echo "‚Ä¢ GET /api/cohorts/competitive - Main cohort intelligence API"
echo "‚Ä¢ GET /api/cohorts/health - System health and coverage"
echo "‚Ä¢ POST /api/cohorts/refresh - Force cohort regeneration"
echo "‚Ä¢ GET /api/cohorts/:cohortName - Specific cohort analysis"
echo ""
echo "üñ•Ô∏è  FRONTEND FEATURES:"
echo "‚Ä¢ /cohorts - Comprehensive cohort browser"
echo "‚Ä¢ Enhanced CompetitorStackRanking with cohort integration"
echo "‚Ä¢ Navigation link to cohorts page"
echo "‚Ä¢ Fallback to legacy APIs for compatibility"
echo ""
echo "üí∞ BUSINESS IMPACT:"
echo "‚Ä¢ Creates the '$100K+ problem' moment"
echo "‚Ä¢ Shows CMOs their brand ranking #4 out of 5 competitors"
echo "‚Ä¢ Generates urgency around AI memory positioning"
echo "‚Ä¢ Provides scientific competitive intelligence"
echo ""

echo "üéâ COHORT INTELLIGENCE DEPLOYMENT COMPLETE!"
echo ""
echo "üîó NEXT STEPS:"
echo "1. Sophisticated runner will auto-initialize cohort tables"
echo "2. System will discover missing competitors automatically"
echo "3. Frontend will prioritize cohort API over legacy APIs"
echo "4. Monitor /api/cohorts/health for system status"
echo ""
echo "üéØ The competitive intelligence system is now ready to create"
echo "   the 'Holy shit, we're dying' moments that drive enterprise sales!"
echo ""

# Optional: Test the deployment
read -p "üß™ Test the cohort API endpoints? (y/n): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo ""
    echo "üß™ Testing cohort endpoints..."
    echo ""
    
    echo "Testing health endpoint..."
    curl -s "https://sophisticated-runner.onrender.com/api/cohorts/health" | head -c 200
    echo ""
    echo ""
    
    echo "Testing competitive cohorts endpoint..."
    curl -s "https://sophisticated-runner.onrender.com/api/cohorts/competitive" | head -c 300
    echo ""
    echo ""
    
    echo "‚úÖ API tests complete!"
fi

echo ""
echo "üéØ Cohort Intelligence System is LIVE!"
echo "   Visit: https://llm-pagerank-frontend.vercel.app/cohorts"
echo "" 