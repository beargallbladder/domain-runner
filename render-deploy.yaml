databases:
  # We'll use existing database, but Render needs this for the blueprint
  - name: domain-runner-db-rust
    plan: free
    databaseName: domain_runner
    user: domain_runner

services:
  # Rust Web Service
  - type: web
    name: domain-runner-rust-web
    env: docker
    dockerfilePath: ./Dockerfile.rust
    dockerCommand: web
    plan: free
    autoDeploy: true
    healthCheckPath: /healthz
    envVars:
      - key: RUST_LOG
        value: info,tower_http=debug

      # SAFETY: Start in read-only mode
      - key: DB_READONLY
        value: "true"
      - key: FEATURE_WRITE_DRIFT
        value: "false"
      - key: FEATURE_CRON
        value: "false"
      - key: FEATURE_WORKER_WRITES
        value: "false"

      # Database - will be updated to use existing
      - key: DATABASE_URL
        fromDatabase:
          name: domain-runner-db-rust
          property: connectionString

  # Rust Worker Service (observe-only initially)
  - type: worker
    name: domain-runner-rust-worker
    env: docker
    dockerfilePath: ./Dockerfile.rust
    dockerCommand: worker
    plan: free
    autoDeploy: true
    envVars:
      - key: RUST_LOG
        value: info
      - key: WORKER_INTERVAL_SEC
        value: "300"
      - key: WORKER_BATCH_SIZE
        value: "10"

      # SAFETY: Worker in observe-only mode
      - key: DB_READONLY
        value: "true"
      - key: FEATURE_WORKER_WRITES
        value: "false"
      - key: ENABLE_DRIFT_MONITORING
        value: "true"
      - key: ENABLE_TENSOR_PROCESSING
        value: "false"

      - key: DATABASE_URL
        fromDatabase:
          name: domain-runner-db-rust
          property: connectionString
