name: Manual Orchestrate
on:
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      targets_override:
        description: 'Override targets file (optional)'
        required: false
        default: ''
      models_override:
        description: 'Override models file (optional)'
        required: false
        default: ''

permissions:
  issues: write
  contents: write

jobs:
  run-if-invoked:
    if: |
      github.event_name == 'workflow_dispatch' || 
      contains(github.event.comment.body, '/orchestrate')
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup environment
        run: |
          cd sentinel
          pip install -r scripts/requirements.txt
      
      - name: Parse command arguments
        if: github.event_name == 'issue_comment'
        id: parse
        run: |
          COMMENT="${{ github.event.comment.body }}"
          # Extract any arguments after /orchestrate
          ARGS=$(echo "$COMMENT" | grep -oP '/orchestrate\s+\K.*' || echo "")
          echo "args=$ARGS" >> $GITHUB_OUTPUT
      
      - name: Trigger orchestration
        env:
          RENDER_SERVICE_URL: ${{ vars.RENDER_SERVICE_URL }}
        run: |
          export RUN_ID=manual-${{ github.run_id }}
          
          # Prepare override configs if specified
          OVERRIDES="{}"
          if [ ! -z "${{ inputs.targets_override }}" ]; then
            OVERRIDES=$(echo $OVERRIDES | jq --arg t "${{ inputs.targets_override }}" '. + {targets: $t}')
          fi
          if [ ! -z "${{ inputs.models_override }}" ]; then
            OVERRIDES=$(echo $OVERRIDES | jq --arg m "${{ inputs.models_override }}" '. + {models: $m}')
          fi
          
          # Trigger run on Render
          curl -X POST "${RENDER_SERVICE_URL}/api/internal/trigger-run" \
            -H "Content-Type: application/json" \
            -d "{\"run_id\":\"${RUN_ID}\",\"overrides\":$OVERRIDES}" \
            -o response.json
          
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
      
      - name: Post status comment
        if: github.event_name == 'issue_comment'
        uses: actions/github-script@v7
        with:
          script: |
            const run_id = process.env.RUN_ID;
            const body = `üöÄ **Orchestration Started**\n\n` +
                        `Run ID: \`${run_id}\`\n` +
                        `Status: In Progress ‚è≥\n\n` +
                        `You can monitor the run at: ${process.env.RENDER_SERVICE_URL}/runs/${run_id}`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });